doker codes and commands 

task: back all the files to one with extension of tar.gz based on he time of backup
 

echo "start"
SOURCE_DIR="root/sample"
BACK_UP="root/backup"
DATE = $(date + "%d -%m -%y _ %H- %M- %S")
BACKUP_FILE="BACKUP_DIR/linuxbackup-$DATE.tar.gz"
echo " creating backup dir"
mkdir -p "$BACKUP_DIR"
echo " $BACKUP_DIR created "
echo "create the backup file"
tar -czvf "$BACKUP_FILE" "$SOURCE_DIR"
echo "**backup sucess"


  *********************************************************************************************************************************************

code to install docker 
in vi.docker sh file it contains below code

sudo yum search docker
sudo yum info docker
sudo yum install -y docker
sudo systemctl enable docker.service
sudo systemctl start docker.service
sudo systemctl status docker.service
docker --version
sudo yum install git -y
sudo curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
docker-compose --version


to run the file sh docker.sh

 #docker images : provides list of all docker images
 #docker ps :  provides running container list.
 #docker pull httpd : to pull the image httpd
 #docker run -it -d httpd : to run docker images httpd once we run the images httpd it will convert images to containter.
 #docker  rm -f (container id): to remove container forcefully.
 #docker  rmi  (imagename-ex: http)  : to remove image
 #docker commit (container id)  (repository name ex: webapp)
 #docker push (respository name) --> login with username and pw first
 #docker push repositoryname/imagename
 #docker pull repositoryname : to pull from the remote repository to local repository
 # docker logout : to logout from docker
 # exit : to exit for present working directory


task 5: pull one amazon linux image and run a contianter with the name called webapp and install Tomcat and start the "Tomcat service"
#docker pull amazonlinux : pulling amazon linux image
#docker run -it -d --name webpapp amazonlinux
#docker ps
#docker exec -it (imageid)  /bin/bash  : The docker exec -it command allows you to run commands inside a running Docker container interactively. 
#docker ls
#yum install wget -y  : wget is a command-line utility for downloading files from the web. It supports downloading via HTTP, HTTPS, and FTP protocols.
#yum wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.91/bin/apache-tomcat-9.0.91.tar.gz    --> google tomcat 9 copy link tar.gz
#yum install tar -y  --> to insall tar 
#yum tar











************************
*************************************************************************************************************************************************
docker compose : when we want to run multiple containers as a single service then we go for docker compose..!!!
  task: to perform docker compose, "docker compose file should be installed.
        * we have to create docker compose file docker compose file should be written in .yml language.
        *  sampe file name should be used : docker-compose.yml

  version: '3'
services:
 web:
   image: nginx
   ports:
      - '8000:80'
 db:
   image: redis




***************************************************************************************************************************************************
  
  
